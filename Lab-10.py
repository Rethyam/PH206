# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DQitZPFel1WxCnhW6cjenOJ38yGm7bxP
"""

import numpy as np
import matplotlib.pyplot as plt

xi,yi = 0,0
xf,yf = 8,6

def T(i,j):
  T=2*i*j+2*i-i*i-2*j*j+72
  return T 
  
A=[]
B=[]

steps=list(map(int,input().split()))

print()
print('****************************')
print()
print('Analytical Solution = 58.66667') 
print()
print('****************************')

print()
print()
ans =[]
print('****************************')
print()
print('Trapezoidal Method Calculation and Graph')
print()
print('****************************')
print()
for l in steps:
   hx,hy = xf/l,yf/l
   I = 0
   for i in np.arange(0,xf,hx):
     for j in np.arange(0,yf,hy):
       I += (T(i,j)+2*T(i,j+hy)+T(i,j+2*hy))*(hy*hx/4)
       avg = I/(6*8)
     ans.append(abs(avg))
   print('No. of steps: '+str(l),'\tIntegration Value: '+str(abs(round(I,4))),'\tAverageValue: '+str(abs(round(avg,4))))   
   A.append(l)
   B.append(abs(round(avg,4)))
   print()
plt.plot(A,B,color='Red')
plt.xlabel('Steps')
plt.ylabel('Temperature')
plt.title('Trapezoidal Method')
plt.show()

print()
print()
C=[]
D=[]
ans =[]
print('****************************')
print()
print('Simpsons 1/8 Method Calculation and Graph')
print()
print('****************************')
print()
for l in steps:
  hx,hy= xf/l,yf/l
  I = 0
  for i in np.arange(0,xf,hx):
    for j in np.arange(0,yf,hy):
      I += (T(i,j)+4*T(i,j+hy/2)+T(i,j+hy))*(hy*hx/6)
      avg = I/(6*8)    
    ans.append(abs(avg))
  print('No. of steps: '+str(l),'\tIntegration Value:'+str(abs(round(I,4))),'\tAverageValue'+str(abs(round(avg,4)))) 
  C.append(l)
  D.append(abs(round(avg,4)))
  print()
plt.plot(C,D,color='Green')
plt.xlabel('Steps')
plt.ylabel('Temperature')
plt.title('Simpsons 1/8 Method')
plt.show()   


print()
print()
E=[]
F=[]
ans =[]
print('****************************')
print()
print('Simpsons 3/8 Method Calculation and Graph')
print()
print('****************************')
print()
for l in steps:
  hx,hy= xf/l,yf/l
  I = 0
  for i in np.arange(0,xf,hx):  
    for j in np.arange(0,yf,hy):
      I += (T(i,j)+3*T(i,j+hy/3)+3*T(i,j+(2/3)*hy)+T(i,j+hy))*(hy*hx/8)
      avg = I/(6*8)
    ans.append(abs(avg))
  print('No. of steps: '+str(l),'\tIntegration Value:'+str(abs(round(I,4))),'\tAverageValue'+str(abs(round(avg,4))))
  E.append(l)
  F.append(abs(round(avg,4)))
  print()
plt.plot(C,D,color='Purple')
plt.xlabel('Steps')
plt.ylabel('Temperature')
plt.title('Simpsons 3/8 Method')
plt.show()
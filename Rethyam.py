# -*- coding: utf-8 -*-
"""Lab_4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yPHUPvsd97fr2W6ZDva2Qrl4vIzTuuLd
"""

#Jacobi

import numpy as np

a = np.array([[3 , 7, 13] ,
              [1 , 5,  3] ,
              [12, 3, -5]], float)
b = np.array( [76,28 , 1 ], float)
n = len(b)


x = np.zeros(n, float)
x_1 = np.zeros(n, float)
x_2 = np.zeros(n, float)

def checkandmakedd(arr,n,const):
    for i in range(n): 
        a_ji=np.sum(arr,axis=1)[i]-arr[i][i]
        a_ii=arr[i][i]
        temp = i
        if(a_ii<a_ji):
            for j in range(n):
                if(j!=i):
                    s_ji=np.sum(arr,axis=1)[j]-arr[j][i]
                    s_ii=arr[j][i]
                    if(s_ii>s_ji):
                        temp = j
        arr[[i,temp]]=arr[[temp,i]]
        const[[i,temp]]=const[[temp,i]]

    return

checkandmakedd(a,n,b)


def seidel(a, x ,b):      
    n = len(a)    
    x_c=np.copy(x)               
    x_c_2=np.copy(x)
    for j in range(0, n):        
        d = b[j]                  
        for i in range(0, n):     
            if(j != i):
                d-=a[j][i] * x_c[i]   
        x_c_2[j] = d / a[j][j]

    return x_c_2


def error(x_2,x_1,n):
    e = np.zeros(n, float)
    for i in range (n):
        e[i]= abs(((x_2[i]-x_1[i])/x_1[i])*100)
    return e
    
check=1
iter=0

x_1=seidel(a,x,b)

while check > 1e-8:

    check =0
    x_2=seidel(a,x_1,b)
    e=error(x_2,x_1,n)
    
    print(x_2)
    print(e)
    print("\n")

    for i in range (n):
        check+= e[i]

    iter +=1

    x_1=np.copy(x_2)

x=x_2

print ("Total number of iterations is "+ str(iter))
print ("Final answer is :")
print (x)

#Gauss Seidel

import numpy as np

a = np.array([[3 , 7, 13] ,
              [1 , 5,  3] ,
              [12, 3, -5]], float)
b = np.array( [76,28 , 1 ], float)
n = len(b)

def checkandmakedd(arr,n,const):
    for i in range(n): 
        a_ji=np.sum(arr,axis=1)[i]-arr[i][i]
        a_ii=arr[i][i]
        temp = i
        if(a_ii<a_ji):
            for j in range(n):
                if(j!=i):
                    s_ji=np.sum(arr,axis=1)[j]-arr[j][i]
                    s_ii=arr[j][i]
                    if(s_ii>s_ji):
                        temp = j
        arr[[i,temp]]=arr[[temp,i]]
        const[[i,temp]]=const[[temp,i]]

    return

checkandmakedd(a,n,b)

x = np.zeros(n, float)
x_1 = np.zeros(n, float)
x_2 = np.zeros(n, float)


def seidel(a, x ,b):      
    n = len(a)    
    x_c=np.copy(x)     

    for j in range(0, n):        
        d = b[j]                  
        for i in range(0, n):     
            if(j != i):
                d-=a[j][i] * x_c[i]   
        x_c[j] = d / a[j][j]   
         
    return x_c


def error(x_2,x_1,n):
    e = np.zeros(n, float)
    for i in range (n):
        e[i]= abs(((x_2[i]-x_1[i])/x_1[i])*100)
    return e
    
check=1
iter=0

x_1=seidel(a,x,b)

while check > 1e-8:

    check =0
    x_2=seidel(a,x_1,b)
    e=error(x_2,x_1,n)
    
    print(x_2)
    print(e)
    print("\n")

    for i in range (n):
        check+= e[i]

    iter +=1

    x_1=np.copy(x_2)

x=x_2

print ("Total number of iterations is "+ str(iter))
print ("Final answer is :")
print (x)